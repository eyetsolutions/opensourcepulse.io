---
- name: Restart Servers Playbook
  hosts: "{{ hostnames }}"
  become: yes  # Use sudo for the tasks

  tasks:
    - name: Notify Discord before reboot
      include_tasks: discord_notify.yml
      vars:
        discord_message: "Reboot initiated for Server {{ inventory_hostname }} ({{ ansible_host }})."
    
    - name: Restart server
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      register: reboot_result

    - name: Notify Discord server is back online
      include_tasks: discord_notify.yml
      vars:
        discord_message: "Server {{ inventory_hostname }} ({{ ansible_host }}) has been successfully rebooted and is back online."
      when: reboot_result is success

    - name: Notify Discord server reboot failed
      include_tasks: discord_notify.yml
      vars:
        discord_message: "Server {{ inventory_hostname }} ({{ ansible_host }}) failed to reboot properly."
      when: reboot_result is failed
